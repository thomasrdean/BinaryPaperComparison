While antlr is text-based and therefore has lots of lexer stuff, we can just make everything a BYTE token and thereby disable all the lexer stuff.

I think that using c++ behind antlr may prevent us from using antlr's repl to debug our grammars :(

I am currently trying to figure out how to define an array of resource records of length defined by another field.
I think the solution will be to pass the length of the field in to a resourceRecordArray parser rule similar to:
rulename[args] returns [retvals] locals [localvars] : ... ;
and then that parser rule will have semantic predicate stuff similar to:
(c+=Char)+ {$c.size()<=5}? (LineBreak | EOF)

Unfortunately, we will have to duplicate this code for queryArray becuase I don't know of any way to make antlr do higher order stuff :(


Tom says that in the paper we should mention that to read the byte values Antlr is currently converting them to strings and back. We could fix that, but probably not worth our time.


I had to `sudo apt install uuid` and `sudo apt install uuid-dev`
